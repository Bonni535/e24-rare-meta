// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace e24_rare_meta_server.Migrations
{
    [DbContext(typeof(E24RareMetaServerDbContext))]
    [Migration("20240313012452_secondMigration")]
    partial class secondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("e24_rare_meta_server.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Personal"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Work"
                        });
                });

            modelBuilder.Entity("e24_rare_meta_server.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            Content = "feel better soon",
                            CreatedOn = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Content = "cute dog",
                            CreatedOn = new DateTime(2023, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Content = "whoops",
                            CreatedOn = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 3
                        });
                });

            modelBuilder.Entity("e24_rare_meta_server.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Content = "WENT WELL!",
                            ImageUrl = "https://t4.ftcdn.net/jpg/02/76/02/13/360_F_276021384_p9d1Hkgn4d5LYX1FnCQRSLw76YX7754n.jpg",
                            PublicationDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Had surgery today",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Content = "IT WENT WELL",
                            ImageUrl = "https://media.istockphoto.com/id/1418164172/photo/cute-labrador-puppy-walks-by-feet.webp?b=1&s=170667a&w=0&k=20&c=mTPWEClVa7Q9pRmM594U56o29ThMfnhO7SteK1MwmIk=",
                            PublicationDate = new DateTime(2023, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Took the dog for a walk",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Content = "still no job",
                            ImageUrl = "https://fjwp.s3.amazonaws.com/blog/wp-content/uploads/2023/02/13061142/30-of-the-Most-Common-Job-Interview-Questions-With-Example-Answers.jpg",
                            PublicationDate = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Job interview today",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("e24_rare_meta_server.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Pets"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Plants"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Art"
                        });
                });

            modelBuilder.Entity("e24_rare_meta_server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Cool dude",
                            CreatedOn = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Cooldude@gmail.com",
                            FirstName = "George",
                            LastName = "Rainbob",
                            ProfileImageUrl = "https://static01.nyt.com/newsgraphics/2020/11/12/fake-people/4b806cf591a8a76adfc88d19e90c8c634345bf3d/fallbacks/mobile-05.jpg",
                            Uid = "lkj;23jhdh2"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Good Guy",
                            CreatedOn = new DateTime(2021, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "goodguygreg@yahoo.com",
                            FirstName = "Greg",
                            LastName = "Notgreg",
                            ProfileImageUrl = "https://static01.nyt.com/newsgraphics/2020/11/12/fake-people/4b806cf591a8a76adfc88d19e90c8c634345bf3d/fallbacks/mobile-06.jpg",
                            Uid = "876ds78s8632"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
